Name:                   TernaryTrees
Version:                0.2.0.1
Category:               Data Structures
Synopsis:               Efficient pure ternary tree Sets and Maps
Description:            Ternary trees are an efficient structure often used for storing
			strings for fast lookups. This package implements a generic tree
			for storing lists of Ord instances, and a specialised String
			implementation which is about 30% faster than the generic version.
			.
			An example program is provided what shows how to use the package
			as a dictionary program for spell checking, and how it can be 
			used to serialise data with Don Stewart's Data.Binary package.
			.
			From my testing, using the \/usr\/share\/dict\/words file on my system
			(over 230,000 words), inserting all words, checking they all exist
			in the tree, writing them to a binary file, reading them back in
			and checking the read in result is the same as the original takes
			slightly over 3 seconds using the StringSet. The written file is 
			also slightly smaller than the input (by over 40% in some cases).
			.
			New in this version:
			.
			* Added a StringMap type, which should be more efficient than using TernaryMap String a
			.
			* Making StringMap actually work...
			.
			&#169; 2009 by Alex Mason (<http://random.axman6.com/blog/>). BSD3 license.
			
License:                BSD3
License-file:           LICENSE.txt
Author:                 Alex Mason
Maintainer:             Alex Mason (irc: Axman6) <axman6@gmail.com>
build-type:             Simple
Cabal-Version:          >= 1.18

Library
        Build-Depends:
                base >= 4.0.0.0, base < 5.0.0.0, binary >= 0.5.0.0, cereal
               ,binary-serialise-cbor
        Exposed-modules:
                Data.Set.TernarySet, Data.Set.StringSet, Data.Map.TernaryMap, Data.Map.StringMap,
                Data.Set.StringSet.Internal,
                Data.Set.TernarySet.Internal,
                Data.Map.TernaryMap.Internal
        Default-Language: Haskell2010

Test-suite spec
  Type: exitcode-stdio-1.0
  Main-Is: tests/Spec.hs
  Build-Depends: cereal
                ,hspec
                ,hspec-smallcheck
                ,smallcheck
                ,base
                ,TernaryTrees
                ,binary
                ,binary-serialise-cbor
                ,QuickCheck
  Ghc-Options: -threaded -Wall -fwarn-tabs -fwarn-incomplete-uni-patterns -fwarn-incomplete-record-updates
  Default-Language: Haskell2010
